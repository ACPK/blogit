language: ruby

env:
  # - RAILS_VERSION=master
  - RAILS_VERSION=4.2.0
  # - RAILS_VERSION=4.1.0
  # - RAILS_VERSION=4.0.0
  # - RAILS_VERSION=3.2.0
  # - RAILS_VERSION=3.1.0
  # - RAILS_VERSION=3.0.0

  # - DB=sqlite
  # - DB=mysql
  # - DB=postgresql

rvm:
  # - 1.9.3
  # - 2.0.0
  # - 2.1.0
  - 2.2.0
  # - ruby-head

addons:
  code_climate:
    repo_token: b96d4021e601491d9aae499b7658f1701f7af63de2ed3152d868f4df14b43fc2

matrix:
  allow_failures:
    - env: RAILS_VERSION=master
    - rvm: ruby-head

before_install:
  - sudo apt-get update
  - sudo apt-get install libpython2.7 python-pygments

before_script:
  # Ensure the MySQL DB Exists
  - mysql -e 'create database blogit_app_test'
  - psql -c 'create database blogit_app_test' -U postgres

script:
  # Setup the test app
  - bundle exec rake dummy:setup
  - bundle exec rake app:blogit:install:migrations
  - bundle exec rake db:migrate SCOPE=blogit
  # Create the blogit config file
  - bundle exec rails generate blogit:install

  # Create the acts-as-taggable-on and blogit migrations
  # If Rails version is 3, use the old rake tasks.
  # If Rails version is 4, use the new rake tasks.
  - if (echo $RAILS_VERSION | grep '3.\d.\d'); then bundle exec rake acts_as_taggable_on:install:migrations; else bundle exec rake app:acts_as_taggable_on_engine:install:migrations; fi

  - if (echo $RAILS_VERSION | grep '3.\d.\d'); then bundle exec rake blogit:install:migrations; else bundle exec rake app:blogit:install:migrations; fi

  # Run the specs with CodeClimate API key
  - bundle exec rake

